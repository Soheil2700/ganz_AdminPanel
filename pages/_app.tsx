import type { AppProps } from 'next/app';
import { ReactElement, ReactNode, Suspense, useEffect, useState } from 'react';
import DefaultLayout from '../components/Layouts/DefaultLayout';
import { Provider } from 'react-redux';
import store from '../store/index';
import Head from 'next/head';
import { appWithI18Next } from 'ni18n';
import { ni18nConfig } from 'ni18n.config.ts';
import useAuthUser from '@/services/api/getAuthUserQuery.api';

// Perfect Scrollbar
import 'react-perfect-scrollbar/dist/css/styles.css';

import '../styles/tailwind.css';
import { NextPage } from 'next';
import localFont from '@next/font/local';
import { SToastContainer } from '../components/shared/notify/SNotify';
import Loading from '@/components/shared/Loading';
import { useRouter } from 'next/router';
import api from '../services/interceptor';

// const dana = localFont({
//    src: [
//       {
//          path: './../assets/fonts/dana/woff2/dana-fanum-light.woff2',
//          weight: '300',
//          style: 'normal',
//       },
//       {
//          path: './../assets/fonts/dana/woff2/dana-fanum-regular.woff2',
//          weight: '400',
//          style: 'normal',
//       },
//       {
//          path: './../assets/fonts/dana/woff2/dana-fanum-medium.woff2',
//          weight: '500',
//          style: 'normal',
//       },
//       {
//          path: './../assets/fonts/dana/woff2/dana-fanum-bold.woff2',
//          weight: '700',
//          style: 'normal',
//       },
//    ],
//    variable: '--font-inter',
// });

const iranSans = localFont({
   src: [
      {
         path: './../assets/fonts/IRANSansXFaNum-Light.woff2',
         weight: '300',
         style: 'normal',
      },
      {
         path: './../assets/fonts/IRANSansXFaNum-Regular.woff2',
         weight: '400',
         style: 'normal',
      },
      {
         path: './../assets/fonts/IRANSansXFaNum-Medium.woff2',
         weight: '500',
         style: 'normal',
      },
      {
         path: './../assets/fonts/IRANSansXFaNum-Bold.woff2',
         weight: '700',
         style: 'normal',
      },
   ],
   variable: '--font-inter',
});

export type NextPageWithLayout<P = {}, IP = P> = NextPage<P, IP> & {
   getLayout?: (page: ReactElement) => ReactNode;
};

type AppPropsWithLayout = AppProps & {
   Component: NextPageWithLayout;
};

const App = ({ Component, pageProps }: AppPropsWithLayout) => {
   const [handleShow, setHandleShow] = useState(false);
   const getLayout = Component.getLayout ?? ((page) => <DefaultLayout>{page}</DefaultLayout>);

   // const { data, isLoading, error } = useAuthUser();
   const router = useRouter();

   // if (isLoading) return <Loading title={'در حال احراز هویت '} />;

   // if (error) {
   //    if (!router.asPath.startsWith('/auth')) router.push('/auth/login');
   // }

   useEffect(() => {
      setTimeout(() => {
         setHandleShow(true);
      }, 500);
      api.get('auth/get-user').catch((err) => {
         if (!router.asPath.startsWith('/auth')) router.push('/auth/login');
      });
   }, []);
   if (!handleShow) {
      return <Loading title={'در حال احراز هویت '} />;
   }
   return (
      <Provider store={store}>
         <Head>
            <title>VRISTO - Multipurpose Tailwind Dashboard Template</title>
            <meta charSet="UTF-8" />
            <meta httpEquiv="X-UA-Compatible" content="IE=edge" />
            <meta name="viewport" content="width=device-width, initial-scale=1.0" />
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.png" />
         </Head>
         <main className={`${iranSans.variable}`}>
            <SToastContainer />
            {getLayout(<Component {...pageProps} />)}
         </main>
      </Provider>
   );
};
export default appWithI18Next(App, ni18nConfig);
